
version: '3'
services:
  strapi-rpb:
    container_name: strapi-rpb
    build:
      dockerfile: ./Dockerfile.dev
      network: host
    image: strapi-rpb:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapi-rpbDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./package-lock.json:/opt/package-lock.json
      - ./.env:/opt/app/.env
      - ./backup:/opt/app/backup
      #- ./public/uploads:/opt/app/public/uploads
    ports:
      - 1337:1337
      - 8000:8000
    networks:
      - strapi-rpb
    depends_on:
      - strapi-rpbDB
    extra_hosts:
    - "host.docker.internal:host-gateway"
      
  strapi-rpbDB:
    container_name: strapi-rpbDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:12.0-alpine
    shm_size: '1gb'
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    command: postgres -c statement_timeout=1min
    volumes:
      - strapi-rpb-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - 5434:5432
    networks:
      - strapi-rpb

  adminer:
    image: adminer
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - strapi-rpbDB

volumes:
  strapi-rpb-data:

networks:
  strapi-rpb:
    name: strapi-rpb
    driver: bridge